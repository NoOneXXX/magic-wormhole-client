# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5.QtWidgets import QMessageBox

from PyQt5 import QtCore, QtWidgets
from .retranslateUI_main_window import retranslate_UI
from ..service.common import get_defaul_path
from .Ui_MainWindow_Setup import MainWindow_Setup


class Ui_MainWindow(object):
    def setupUi(self, MainWindow, wormhole_transfer):
        self._wormholeTransfer = wormhole_transfer
        MainWindow_Setup(self, MainWindow)
        retranslate_UI(self, MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self._wormholeTransfer._signal.set_code_signal.connect(self.get_code_value)

        self.btnBrowseFile.clicked.connect(self.choose_file_from_location_machine)
        self.btnSendFile.clicked.connect(self.fire_file_remotion)
        self._wormholeTransfer._signal.render_send_percent_number.connect(self.render_send_file_process)

        # receive file function
        self.txtFolderName.setText(get_defaul_path())
        self.btnBrowseFolder.clicked.connect(self.choose_dir_from_location_machine)
        self.btnSetCodeRecv.clicked.connect(self.receive_file_from_remote_machine)
        self._wormholeTransfer._signal.start_receive_file.connect(self.start_receive_file_now)
        self._wormholeTransfer._signal.rec_file_name_and_size.connect(self.rec_file_name_and_size_label)
        self._wormholeTransfer._signal.render_rec_percent_number.connect(self.render_rec_dialog)

    def render_rec_dialog(self, vls):
        split_vls = str(vls).split("||")
        nums = int(split_vls[0])
        if nums == 100:
            self._wormholeTransfer.close_conn()
            result_box = QMessageBox.information(self, '提示', '文件已传送完成', QMessageBox.Yes)
            if result_box == "Yes":
                self.progressRecvFile.setValue(0)

        self.progressRecvFile.setValue(nums)
        # time countdown when file transfering
        self.label_15.setText(str(split_vls[1]))
        # file name
        self.label_12.setText("已接收" + "  " + split_vls[2])

    def rec_file_name_and_size_label(self, vls):
        self.label_5.setText(vls)

    def receive_file_from_remote_machine(self):
        code_ = self.txtSecretCodeRecv.text()
        code = '-'.join(code_.split())
        if not code:
            QMessageBox.warning(self, '警告', '密钥输入错误', QMessageBox.Ok)
            return
        """check default path whether is right"""
        path = self.txtFolderName.text()
        if path == '' or path is None:
            message_box = QMessageBox.warning(self, '警告', '请先选择文件保存路径', QMessageBox.Ok)
            if message_box == QMessageBox.Ok:
                print('test this button clicked')
                pass
            return

        if os.path.exists(path):
            pass
        else:
            QMessageBox.warning(self, '警告', '文件路径不正确', QMessageBox.Ok)
            return
        self._wormholeTransfer.open_wormhole(code_)

    def start_receive_file_now(self):
        path_ = self.txtFolderName.text()
        self._wormholeTransfer.accept_offer(path_)

    def get_code_value(self, code):
        self.txtSecretCode.setText(code)

    def choose_file_from_location_machine(self):
        '''get home path , when os is window system that change default path to Desktop so this is remainder'''
        default_dir = get_defaul_path()
        path, _ = QtWidgets.QFileDialog.getOpenFileName(self, "Open file", default_dir,
                                                        "所有文件 (*);;Zip 文件 (*.zip);;Tar 文件 (*.tar)")
        if path:
            try:
                self.txtFileName.setText(path)
            except Exception as e:
                print('from where --->', e)

    def choose_dir_from_location_machine(self):
        '''get home path , when os is window system that change default path to Desktop so this is remainder'''
        default_dir = get_defaul_path()
        dir_path = QtWidgets.QFileDialog.getExistingDirectory(self, "选择文件夹", default_dir)
        if dir_path:
            try:
                self.txtFolderName.setText(dir_path)
            except Exception as e:
                print('from where --->', e)

    def fire_file_remotion(self):
        self._wormholeTransfer.open_defer_mode(None)
        path = self.txtFileName.text()
        if path == '' or path is None:
            message_box = QMessageBox.warning(self, '警告', '请先选择需要上传的文件', QMessageBox.Ok)
            if message_box == QMessageBox.Ok:
                print('test this button clicked')
                pass
            return

        if os.path.exists(path):
            pass
        else:
            QMessageBox.warning(self, '警告', '文件不存在', QMessageBox.Ok)
            return
        self._wormholeTransfer.send_file_to_dest(path)

    def render_send_file_process(self, vls):
        split_vls = str(vls).split("||")
        nums = int(split_vls[0])
        if nums == 100:
            self._wormholeTransfer.close_conn()
            QMessageBox.information(self, '提示', '文件已传送完成', QMessageBox.Yes)
        self.progressSendFile.setValue(nums)
        self.label_9.setText("已传送" + "  " + split_vls[2])
