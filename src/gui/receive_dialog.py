# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'send_dialog.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import time
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class receive_file(object):
    def __init__(self, Dialog, wormhole_transfer):
        self.wormhole_t = wormhole_transfer
        self._dialog = Dialog
        self._translate = None
        self.times_num = 3
        Dialog.setObjectName("Dialog")
        Dialog.resize(601, 251)
        self.keys_label = QtWidgets.QLabel(Dialog)
        self.keys_label.setGeometry(QtCore.QRect(60, 20, 71, 18))
        self.keys_label.setObjectName("keys_label")
        self.progressBar = QtWidgets.QProgressBar(Dialog)
        self.progressBar.setGeometry(QtCore.QRect(60, 70, 241, 23))
        self.progressBar.setProperty("value", 0)
        self.progressBar.setObjectName("progressBar")
        self.sending_status = QtWidgets.QLabel(Dialog)
        self.sending_status.setGeometry(QtCore.QRect(360, 60, 111, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.sending_status.setFont(font)
        self.sending_status.setObjectName("sending_status")
        self.code_label = QtWidgets.QLabel(Dialog)
        self.code_label.setGeometry(QtCore.QRect(170, 10, 271, 31))
        self.code_label.setObjectName("code_label")

        self.file = QtWidgets.QLabel(Dialog)
        self.file.setGeometry(QtCore.QRect(60, 120, 81, 41))
        self.file.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.file.setObjectName("file_name")
        self.file_name = QtWidgets.QLabel(Dialog)
        self.file_name.setGeometry(QtCore.QRect(150, 120, 411, 41))
        self.file_name.setObjectName("file")

        self.transfer_type = QtWidgets.QLabel(Dialog)
        self.transfer_type.setGeometry(QtCore.QRect(60, 160, 81, 41))
        self.transfer_type.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.transfer_type.setObjectName("transfer_type")
        self.transfer_type_2 = QtWidgets.QLabel(Dialog)
        self.transfer_type_2.setGeometry(QtCore.QRect(150, 160, 131, 41))
        self.transfer_type_2.setObjectName("transfer_type_2")

        self.transfer_type_time = QtWidgets.QLabel(Dialog)
        self.transfer_type_time.setGeometry(QtCore.QRect(250, 160, 100, 41))
        self.transfer_type_time.setObjectName("transfer_type_time")
        self.retranslateUi(Dialog)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

        # close dialog event bound
        self._dialog.closeEvent = self.listening_close_event

    def retranslateUi(self, Dialog):
        self._translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(self._translate("Dialog", "接收文件"))

        self.sending_status.setText(self._translate("Dialog", "接收中"))
        self.code_label.setText(self._translate("Dialog", ""))

        self.file.setText(self._translate("Dialog", "文件名称:"))
        self.file_name.setText(self._translate("Dialog", "..."))

        self.transfer_type.setText(self._translate("Dialog", "已下载:"))
        self.transfer_type_2.setText(self._translate("Dialog", "..."))

        self.wormhole_t._signal.render_rec_percent_number.connect(self.dym_set_bar_value)
        self.wormhole_t._signal.close_rec_dialog.connect(self.close_rec_dialog)
        self.wormhole_t._signal.rec_file_name_and_size.connect(self.rec_file_name_and_size_label)


    def dym_set_bar_value(self, vls):
        split_vls = str(vls).split("||")
        nums = int(split_vls[0])
        if nums == 100:
            self.sending_status.setText('发送完成')
        self.progressBar.setValue(nums)
        self.transfer_type_2.setText(split_vls[1])
        self.transfer_type_time.setText(split_vls[2])


    def close_rec_dialog(self):
        """if send finished
        then use a massive sleep statement to close dialog after three second"""
        self._dialog.close()
        self.wormhole_t._signal.close_inner_dialog_event.emit(0)



    def rec_file_name_and_size_label(self,vls):
        show_vls = vls
        if len(vls) > 46:
            show_vls = vls[0:15]+"...."+vls[-26:]
        self.file_name.setText(show_vls)


    def listening_close_event(self, event):
        self.wormhole_t._signal.close_inner_dialog_event.emit(1)





